https://www.oracletutorial.com/

Character Data types

    CHAR, NCHAR, VARCHAR, VARCHAR2, NVARCHAR2

Number

    Number

Datetime and interval data types

    DATE, TIMESTAMP, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH LOCAL TIME ZONE

lARGE DATA TYPES

		RAW, LONG RAW, BFILE, BLOB, CLOB, UROWID
		

Oracle constraints

    Primary Key, Foriegn key, Unique , Check, not null 
	
----------
Create Table

     CREATE TABLE schema_name.table_name (
          column_1 data_type column_constraint,
          column_2 data_type column_constraint,
          ...
          table_constraint
         );
		 t bv n
	  CREATE TABLE ot.persons( person_id NUMBER GENERARED BY DEFAULT AS IDENTITY,
	                           first_name VARCHAR2(50) NOT NULL,
							   last_name VARCHAR2(50) NOT NULL,
							   PRIMARY KEY(person_id));
							   
     GENERATED ALWAYS  --> Oracle always generates a value for the identity column. Attempt to insert a value into the identity column will cause an error.
	 GENERATED BY DEFAULT  --> Oracle generates a value for the identity column if you provide no value.
	 GENERATED BY DEFAULT ON NULL  --> Oracle generates a value for the identity column if you provide a NULL value or no value at all.


 Alter TABLE
 
     Add one or more columns
	 Modify column definition
	 Drop one or more columns
	 Rename columns
	 Rename table

    ALTER TABLE table_name
      ADD column_name type constraint;
	  
	 ALTER TABLE persons ADD birtdate DATE NOT NULL;
	 ALTER TABLE persons ADD (phone VARCHAR(20), email VARCHAR(100));
     ALTER TABLE persons MODIFY birthdate DATE NULL;
	 ALTER TABLE table_name DROP COLUMN column_name;
	 ALTER TABLE table_name RENAME COLUMN column_name TO new_name;
     
     TRUNCATE TABLE table_name;
	 DELETE FROM table_name;
	 TRUNCATE TABLE table_name CASCADE;
	 
	 RENAME table_name TO new_name;
	

Primary Key:
     A primary key is a column of a combination of columns in a table that uniquely identifies a row in the table.
	 Rule:
	       A primary key column cannot contain a NULL value or an empty string.
		   A primary key value must be unique within the entire table.
		   A primary key value should not be changed over time.
		
        CREATE TABLE person(id NUMBER PRIMARY KEY);
		
		CREATE TABLE person(id NUMBER, 
		                    first_name varchar2(50) NOT NULL,
							CONSTRAINT person_pk PRIMARY KEY(id) );
							
		
         ALTER TABLE table_name ADD CONSTRAINT constraint_name PRIMARY KEY (column1, column2, ...);    
         ALTER TABLE vendors ADD CONSTRAINT pk_vendors PRIMARY KEY (vendor_id);  		 
		 ALTER TABLE table_name DROP CONSTRAINT primary_key_constraint_name;
		 ALTER TABLE table_name DISABLE CONSTRAINT primary_key_constraint_name;
		 ALTER TABLE purchase_orders ENABLE PRIMARY KEY;

Foreign Key

        CREATE TABLE suppliers (
        supplier_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
        supplier_name VARCHAR2(255) NOT NULL,
        group_id NUMBER NOT NULL,
        PRIMARY KEY(supplier_id),
        FOREIGN KEY(group_id) REFERENCES supplier_groups(group_id)
         ); 
		 
		 
SELECT

        SELECT name, address FROM employ ORDER BY name ASC;
		SELECT name,lastname, address FROM employ ORDER BY name , lastname DESC;
		SELECT name , state FROM employee ORDER BY state ASC NULL FIRST;
         
		
		
	Write SQL query to fetch employee names having a salary greater than or equal to 5000 and less than or equal 10000.

     SELECT emp_name FROM employee where employee_id IN ( SELECT emp_id from employee where sal > 5000 AND sal < 10000 );
	 
	Write an SQL Query to find maximum salary in each department of an organisation.
       SELECT dept_id, MAX(salary) FROM employee GROUP BY dept_id;
	   


Fetching Duplicate Records

     SELECT emp_name, COUNT(emp_name) FROM emp GROUP BY emp_name HAVING COUNT > 1;
     
 Decode
 
     SELECT order_no, DECODE(status,'0','ordered','1','packed') FROM orders;
     
     SELECT order_no, CASE( WHEN status='0' THEN 'ordered'
                            WHEN status='1' THEN 'packed'
                          ) FROM orders;
                          
                          
    SELECT TO_CHAR(TO_DATE('30-01-2021','DD-MM-YYYY'),'DD-MM-YYYY') FROM DUAL;
    
    First Record
    
      SELECT * FROM employee WHERE ROWNUM = 1;
      
   Last Record
   
      SELECT * FROM employee ROWNUM = ( SELECT MAX(ROWNUM)  FROM employee);
      
    

